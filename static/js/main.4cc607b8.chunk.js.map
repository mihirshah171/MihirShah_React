{"version":3,"sources":["components/CheckDevice/CheckDevice.module.css","components/CheckDevice/CheckDevice.js","components/DisplayCurrentWidth/DisplayCurrentWidth.js","components/Button/Button.js","containers/DeviceWidthChecker.js","ErrorBoundary/ErrorBoundary.js","index.js","containers/DeviceWidthChecker.module.css","components/DisplayCurrentWidth/DisplayCurrentWidth.module.css","components/Button/Button.module.css"],"names":["module","exports","Tablet","props","isDesktop","width","isTablet","isMobile","className","classes","Device","IconDevice","DisplayCurrentWidth","isHeader","DisplayLabel","resetButton","CustomButton","onClick","clicked","children","DeviceWidthChecker","useState","window","innerWidth","windowWidth","setWindowWidth","isVisibleMyComponent","setVisibility","useEffect","captureWindowResizeEvent","currentWidth","addEventListener","removeEventListener","Button","CheckDevice","ErrorBoundary","state","hasError","error","info","console","log","this","Component","ReactDOM","render","document","getElementById"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,OAAS,4BAA4B,WAAa,kC,6JCwDrDC,EArDA,SAACC,GACZ,IAAMC,EAAYD,EAAME,MAAQ,KAC1BC,EAAWH,EAAME,MAAQ,MAAQF,EAAME,MAAQ,IAC/CE,EAAWJ,EAAME,OAAS,IAEhC,OACI,kBAAC,WAAD,KACI,yBAAKG,UAAWC,IAAQC,QAEhBJ,GAAYF,GAAaG,EACrB,6BACI,+CAEIH,EACI,sCACE,KAGNE,EACI,qCACE,KAGNC,EACI,qCACE,KAEV,6BAEQH,EACI,kBAAC,IAAD,CAAkBI,UAAWC,IAAQE,aACnC,KAGNL,EACI,kBAAC,IAAD,CAAiBE,UAAWC,IAAQE,aAClC,KAGNJ,EACI,kBAAC,IAAD,CAAiBC,UAAWC,IAAQE,aAClC,OAKlB,Q,gBCzBTC,EAtBa,SAACT,GACzB,IAAMU,EAAWV,EAAME,MAAQ,IAC/B,OACI,kBAAC,WAAD,KACI,yBAAKG,UAAWC,IAAQK,cAEhBD,EACI,6BACI,wEAGJ,KAER,6BACI,qDACA,gCAASV,EAAME,W,gBCHpBU,EAZK,SAACZ,GACjB,OACI,kBAAC,WAAD,KACI,6BACI,4BAAQK,UAAWC,IAAQO,aAAcC,QAASd,EAAMe,SACpD,8BAAM,gCAASf,EAAMgB,eCiC1BC,EAnCY,WAAO,IAAD,EAESC,mBAASC,OAAOC,YAFzB,mBAEtBC,EAFsB,KAETC,EAFS,OAGiBJ,oBAAS,GAH1B,mBAGtBK,EAHsB,KAGAC,EAHA,KAc7B,OATAC,qBAAU,WACN,IAAMC,EAA2B,WAC7B,IAAMC,EAAeR,OAAOC,WAC5BE,EAAeK,IAGnB,OADAR,OAAOS,iBAAiB,SAAUF,GAC3B,WAAQP,OAAOU,oBAAoB,SAAUH,MACrD,IAGC,kBAAC,WAAD,KACI,yBAAKrB,UAAWC,IAAQW,oBACpB,kBAACa,EAAD,CACIf,QAAS,kBAAMS,GAAeD,KADlC,mCAKIA,GACA,kBAAC,EAAD,CACIrB,MAAOmB,IAGf,kBAACU,EAAD,CACI7B,MAAOmB,O,+BCVZW,E,4MAtBXC,MAAQ,CAAEC,UAAU,G,gEASFC,EAAOC,GACrBC,QAAQC,IAAR,4CAAiDH,IACjDE,QAAQC,IAAIF,K,+BAIZ,OAAIG,KAAKN,MAAMC,SACJ,qDAEJK,KAAKvC,MAAMgB,Y,gDAdUmB,GAE5B,OADAE,QAAQC,IAAR,mDAAwDH,IACjD,CAAED,UAAU,O,GAPCM,a,MCI5BC,IAASC,OACP,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCR1B/C,EAAOC,QAAU,CAAC,mBAAqB,iD,kBCAvCD,EAAOC,QAAU,CAAC,aAAe,4C,kBCAjCD,EAAOC,QAAU,CAAC,aAAe,gC","file":"static/js/main.4cc607b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Device\":\"CheckDevice_Device__3pTtu\",\"IconDevice\":\"CheckDevice_IconDevice__3gfkg\"};","import React, { Fragment } from 'react';\r\nimport classes from './CheckDevice.module.css'\r\nimport { AiOutlineDesktop, AiOutlineTablet, AiOutlineMobile } from 'react-icons/ai';\r\n\r\nconst Tablet = (props) => {\r\n    const isDesktop = props.width > 1200;\r\n    const isTablet = props.width < 1200 && props.width > 500;\r\n    const isMobile = props.width <= 500;\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.Device}>\r\n                {\r\n                    isTablet || isDesktop || isMobile ?\r\n                        <div>\r\n                            <label>Device: &nbsp;</label>\r\n                            {\r\n                                isDesktop ?\r\n                                    <b>Desktop</b>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                isTablet ?\r\n                                    <b>Tablet</b>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                isMobile ?\r\n                                    <b>Mobile</b>\r\n                                    : null\r\n                            }\r\n                            <div>\r\n                                {\r\n                                    isDesktop ?\r\n                                        <AiOutlineDesktop className={classes.IconDevice} />\r\n                                        : null\r\n                                }\r\n                                {\r\n                                    isTablet ?\r\n                                        <AiOutlineTablet className={classes.IconDevice} />\r\n                                        : null\r\n                                }\r\n                                {\r\n                                    isMobile ?\r\n                                        <AiOutlineMobile className={classes.IconDevice} />\r\n                                        : null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Tablet;","import React, { Fragment } from 'react';\r\nimport classes from './DisplayCurrentWidth.module.css';\r\n\r\nconst DisplayCurrentWidth = (props) => {\r\n    const isHeader = props.width > 500;\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.DisplayLabel}>\r\n                {\r\n                    isHeader ?\r\n                        <div>\r\n                            <label>Welcome to the Device Width Checker.</label>\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n                <div>\r\n                    <label>Current Width:&nbsp;</label>\r\n                    <strong>{props.width}</strong>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default DisplayCurrentWidth;","import React, { Fragment } from 'react';\r\nimport classes from './Button.module.css'\r\n\r\nconst resetButton = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <button className={classes.CustomButton} onClick={props.clicked}>\r\n                    <span><strong>{props.children}</strong></span>\r\n                </button>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default resetButton;\r\n","import React, { useEffect, useState, Fragment } from 'react';\r\nimport classes from './DeviceWidthChecker.module.css'\r\nimport CheckDevice from '../components/CheckDevice/CheckDevice'\r\nimport DisplayCurrentWidth from '../components/DisplayCurrentWidth/DisplayCurrentWidth';\r\nimport Button from '../components/Button/Button';\r\n\r\nconst DeviceWidthChecker = () => {\r\n\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n    const [isVisibleMyComponent, setVisibility] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const captureWindowResizeEvent = () => {\r\n            const currentWidth = window.innerWidth;\r\n            setWindowWidth(currentWidth);\r\n        }\r\n        window.addEventListener(\"resize\", captureWindowResizeEvent)\r\n        return () => { window.removeEventListener(\"resize\", captureWindowResizeEvent) }\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.DeviceWidthChecker}>\r\n                <Button\r\n                    clicked={() => setVisibility(!isVisibleMyComponent)}>\r\n                    CLICK HERE TO SEE CURRENT WIDTH\r\n                </Button>\r\n                {\r\n                    isVisibleMyComponent &&\r\n                    <DisplayCurrentWidth\r\n                        width={windowWidth}\r\n                    />\r\n                }\r\n                <CheckDevice\r\n                    width={windowWidth}\r\n                />\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default DeviceWidthChecker;\r\n\r\n","import React, { Component } from \"react\";\r\nclass ErrorBoundary extends Component {\r\n    state = { hasError: false };\r\n\r\n    //1. Error Methods into LifeCycle\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(`Error log from getDerivedStateFromError: ${error}`);\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        console.log(`Error log from componentDidCatch: ${error}`);\r\n        console.log(info);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Something went wrong.</h1>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DeviceWidthChecker from './containers/DeviceWidthChecker';\r\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nReactDOM.render(\r\n  <ErrorBoundary>\r\n    <DeviceWidthChecker />\r\n  </ErrorBoundary>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeviceWidthChecker\":\"DeviceWidthChecker_DeviceWidthChecker__HnmMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayLabel\":\"DisplayCurrentWidth_DisplayLabel__mO17A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomButton\":\"Button_CustomButton__W2DgW\"};"],"sourceRoot":""}